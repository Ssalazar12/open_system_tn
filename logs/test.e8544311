  Activating project at `~/open_system_tn`
┌ Warning: Calling `inner(x::MPS, A::MPO, y::MPS)` where the site indices of the `MPS`
│ `x` and the `MPS` resulting from contracting `MPO` `A` with `MPS` `y` don't
│ match is deprecated as of ITensors v0.3 and will result in an error in ITensors
│ v0.4. The most common cause of this is something like the following:
│ 
│ ```julia
│ s = siteinds("S=1/2")
│ psi = random_mps(s)
│ H = MPO(s, "Id")
│ inner(psi, H, psi)
│ ```
│ 
│ `psi` has the Index structure `-s-(psi)` and `H` has the Index structure
│ `-s'-(H)-s-`, so the Index structure of would be `(dag(psi)-s- -s'-(H)-s-(psi)`
│  unless the prime levels were fixed. Previously we tried fixing the prime level
│   in situations like this, but we will no longer be doing that going forward.
│ 
│ There are a few ways to fix this. You can simply change:
│ 
│ ```julia
│ inner(psi, H, psi)
│ ```
│ 
│ to:
│ 
│ ```julia
│ inner(psi', H, psi)
│ ```
│ 
│ in which case the Index structure will be `(dag(psi)-s'-(H)-s-(psi)`.
│ 
│ Alternatively, you can use the `Apply` function:
│ 
│ ```julia
│ 
│ inner(psi, Apply(H, psi))
│ ```
│ 
│ In this case, `Apply(H, psi)` represents the "lazy" evaluation of
│ `apply(H, psi)`. The function `apply(H, psi)` performs the contraction of
│ `H` with `psi` and then unprimes the results, so this versions ensures that
│ the prime levels of the inner product will match.
│ 
│ Although the new behavior seems less convenient, it makes it easier to
│ generalize `inner(::MPS, ::MPO, ::MPS)` to other types of inputs, like `MPS`
│ and `MPO` with different tag and prime conventions, multiple sites per tensor,
│ `ITensor` inputs, etc.
│ 
│ Stacktrace:
│   [1] warn_once(msg::String, funcsym::Symbol; force::Bool, stacktrace::Bool)
│     @ ITensors /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensors/AOPBm/src/utils.jl:8
│   [2] warn_once
│     @ /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensors/AOPBm/src/utils.jl:5 [inlined]
│   [3] deprecate_make_inds_match!(::typeof(ITensorMPS._log_or_not_dot), M1dag::MPS, M2::MPS, loginner::Bool; make_inds_match::Bool)
│     @ ITensorMPS /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1092
│   [4] deprecate_make_inds_match!
│     @ /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1057 [inlined]
│   [5] _log_or_not_dot(M1::MPS, M2::MPS, loginner::Bool; make_inds_match::Bool)
│     @ ITensorMPS /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1107
│   [6] _log_or_not_dot
│     @ /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1098 [inlined]
│   [7] #dot#295
│     @ /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1158 [inlined]
│   [8] dot
│     @ /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1157 [inlined]
│   [9] inner(M1::MPS, M2::MPS)
│     @ ITensorMPS /data/soft/packages-15.1/julia/1.11.5/share/julia/packages/ITensorMPS/3OORN/src/abstractmps.jl:1200
│  [10] compute_trajectory_tebd(s::Vector{Index{Int64}}, gates::Vector{ITensor}, L::Int64, J::Float64, Δτ::Float64, ttotal::Float64, Nh::Int64, gammas::Vector{Float64}, cutoff::Float64)
│     @ Main ~/open_system_tn/scripts/kerr_cavities.jl:164
│  [11] macro expansion
│     @ ./timing.jl:421 [inlined]
│  [12] top-level scope
│     @ ~/open_system_tn/scripts/kerr_cavities.jl:216
│  [13] include(mod::Module, _path::String)
│     @ Base ./Base.jl:557
│  [14] exec_options(opts::Base.JLOptions)
│     @ Base ./client.jl:323
│  [15] _start()
│     @ Base ./client.jl:531
│   caller = ip:0x0
└ @ Core :-1
